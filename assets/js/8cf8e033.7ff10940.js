"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[908],{1445:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return s},default:function(){return p}});var r=n(7462),i=n(3366),l=(n(7294),n(3905)),a=["components"],o={sidebar_position:3},u="flexready",d={unversionedId:"plugins/flexready",id:"plugins/flexready",isDocsHomePage:!1,title:"flexready",description:"About",source:"@site/docs/plugins/flexready.md",sourceDirName:"plugins",slug:"/plugins/flexready",permalink:"/docs/plugins/flexready",editUrl:"https://github.com/go-flexible/go-flexible.github.io/edit/documentation/docs/plugins/flexready.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"flexgrpc",permalink:"/docs/plugins/flexgrpc"},next:{title:"flexmetrics",permalink:"/docs/plugins/flexmetrics"}},s=[{value:"About",id:"about",children:[]},{value:"Install",id:"install",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Example",id:"example",children:[]}],c={toc:s};function p(e){var t=e.components,n=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"flexready"},"flexready"),(0,l.kt)("h2",{id:"about"},"About"),(0,l.kt)("p",null,"A common occurence when writing services is the need to determine the health of some or all of the attached resources your service might be using."),(0,l.kt)("p",null,"Using ",(0,l.kt)("inlineCode",{parentName:"p"},"flexready")," this can be done easily by configuring an endpoint to serve the result of a set of a ",(0,l.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/go-flexible/flexready#CheckerFunc"},"CheckerFunc")," functions which you provide."),(0,l.kt)("h2",{id:"install"},"Install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go get github.com/go-flexible/flexready\n")),(0,l.kt)("h2",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"The readiness server can be configured through the environment to match setup in\nthe infrastructure."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"FLEX_READYSRV_ADDR")," default: ",(0,l.kt)("inlineCode",{parentName:"li"},"0.0.0.0:3674")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"FLEX_READYSRV_LIVENESS_PATH")," default: ",(0,l.kt)("inlineCode",{parentName:"li"},"/live")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"FLEX_READYSRV_READINESS_PATH")," default: ",(0,l.kt)("inlineCode",{parentName:"li"},"/ready"))),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/go-flexible/flexready"},(0,l.kt)("img",{parentName:"a",src:"https://pkg.go.dev/badge/github.com/go-flexible/flexready.svg",alt:"Go Reference"}))),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'// Prepare your readyserver.\nreadysrv := flexready.New(flexready.Checks{\n        "redis":       func() error { return redisCheck(nil) },\n        "cockroachdb": func() error { return cockroachCheck(nil) },\n}, flexready.WithAddress(":9999"))\n\n// Run it, or better yet, let `flex` run it for you!\n_ = readysrv.Run(context.Background())\n\n// Liveness endpoint:  http://localhost:9999/live\n// Readiness endpoint: http://localhost:9999/ready\n')))}p.isMDXComponent=!0}}]);