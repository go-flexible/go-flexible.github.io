"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[908],{1445:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var n=t(7462),o=t(3366),i=(t(7294),t(3905)),l=["components"],a={sidebar_position:3},s="flexready",c={unversionedId:"plugins/flexready",id:"plugins/flexready",isDocsHomePage:!1,title:"flexready",description:"About",source:"@site/docs/plugins/flexready.md",sourceDirName:"plugins",slug:"/plugins/flexready",permalink:"/docs/plugins/flexready",editUrl:"https://github.com/go-flexible/go-flexible.github.io/edit/documentation/docs/plugins/flexready.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"flexgrpc",permalink:"/docs/plugins/flexgrpc"},next:{title:"flexmetrics",permalink:"/docs/plugins/flexmetrics"}},d=[{value:"About",id:"about",children:[]},{value:"Install",id:"install",children:[]},{value:"Example",id:"example",children:[]}],u={toc:d};function p(e){var r=e.components,t=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"flexready"},"flexready"),(0,i.kt)("h2",{id:"about"},"About"),(0,i.kt)("p",null,"A common occurence when writing services is the need to determine the health of some or all of the attached resources your service might be using."),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"flexready")," this can be done easily by configuring an endpoint to serve the result of a set of a ",(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/go-flexible/flexready#CheckerFunc"},"CheckerFunc")," functions which you provide."),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"go get github.com/go-flexible/flexready\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/go-flexible/flexready"},(0,i.kt)("img",{parentName:"a",src:"https://pkg.go.dev/badge/github.com/go-flexible/flexready.svg",alt:"Go Reference"}))),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// Configure the server, or pass nil for package defaults.\nconfig := &flexready.Config{\n        Server: &http.Server{Addr: ":9999"},\n}\n// Prepare your readyserver.\nreadysrv := flexready.New(config, flexready.Checks{\n        "redis":       func() error { return redisCheck(redisClient) },\n        "cockroachdb": func() error { return cockroachCheck(dbClient) },\n})\n// Run it, or better yet, let `flex` run it for you!\n_ = readysrv.Run(context.Background())\n\n// Ready server is now available on http://localhost:9999/ready\n')))}p.isMDXComponent=!0}}]);